//java Slips
#######Slip 1##############
//Q1)print all prime numbers in an array of n elements(use command line arguments)

#without cmd line-----
import java.util.*;
class Demo
{
  public static void main(String arg[])
  {
     Scanner sc=new Scanner(System.in);
     int a[]=new int [100]; 
     System.out.println("Enter Limit-");
     int n=sc.nextInt();
     System.out.println("Enter n numbers-");
     for(int i=0;i<n;i++)
     {
         a[i]=sc.nextInt();
     }
     System.out.println("All prime numbers-");
    for(int i=0;i<n;i++)
    {
        int   f=0;
         for(int j=2;j<a[i];j++)
       {
         if(a[i]%j==0)
       {
             f=1;
       }
       }
       if( f==0)
       System.out.println(""+a[i]);
    }
  }
}
//#using command line-

import java.lang.Integer;
class Demo
{
  public static void main(String arg[])
  {
     Scanner sc=new Scanner(System.in);
     int a[]=new int [100]; 
     
     int n=arg.length;
     
     for(int i=0;i<n;i++)
     {
         a[i]=Integer.parseInt(arg[i]);
     }
     System.out.println("All prime numbers-");
    for(int i=0;i<n;i++)
    {
        int   f=0;
         for(int j=2;j<a[i];j++)
       {
         if(a[i]%j==0)
       {
             f=1;
       }
       }
       if( f==0)
       System.out.println(""+a[i]);
    }
  }
}
    
    


->>>>>>>>>>>>
hp@hp-HP-ProBook-430-G4:~$ javac cmd.java
hp@hp-HP-ProBook-430-G4:~$ java Demo 2 4 5 6 7 9 43 53  3
Enter Limit-
All prime numbers-
2
5
7
43
53
3

  /*Q2) Define an abstract class Staff with protected members id and name. Define a parameterized
constructor. Define one subclass OfficeStaff with member department. Create n objects of
OfficeStaff and display all details.
*/
import java.util.*;
abstract class Staff
{
protected  int id;
 protected String name;
Staff(int id,String name)
{
   this.id=id;
   this.name=name;
}
}
class OfficeStaff extends Staff
{
  String dept;
  public OfficeStaff(int id,String name,String dept)
  {
   super(id,name);
   this.dept=dept;
  }
  void display()
  {
    System.out.println("Id="+id);
    System.out.println("Name"+name);
    System.out.println("Dept="+dept);
  }
  public static void main(String arg[])
  {
   Scanner sc=new Scanner(System.in);
   System.out.println("Enter Limit-");
   int n=sc.nextInt();
   OfficeStaff  ob[]=new OfficeStaff[100];
   for(int i=0;i<n;i++)
   {
       
       System.out.println("Enter id name dept");
       int id=sc.nextInt();
       String name=sc.next();
       String dept=sc.next();
     ob[i]=new OfficeStaff(id,name,dept);
   }
   for(int i=0;i<n;i++)
   {
    ob[i].display();
   }
  }
}
################slip2##############
   /*Q1) Write a program to read the First Name and Last Name of a person, his weight and height using
command line arguments. Calculate the BMI Index which is defined as the individual's body mass
divided by the square of their height.
(Hint : BMI = Wts. In kgs / (ht)2*/
->>>>>>
import java.lang.Integer;
class Demo
{
  public static void main(String arg[])
  {
     String fname=arg[0];
      String lname=arg[1];
     int Wt_kg=Integer.parseInt(arg[2]);
     int Ht_m=Integer.parseInt(arg[3]);
      
     float BMI=Wt_kg/(Ht_m*Ht_m);
      System.out.println("\nName-"+fname +" "+lname);
      System.out.println("BMI="+BMI);
  }
}
/*Q2) Define a class CricketPlayer (name,no_of_innings,no_of_times_notout, totatruns, bat_avg).
Create an array of n player objects .Calculate the batting average for each player using static
method avg(). Define a static sort method which sorts the array on the basis of average. Display
the player details in sorted order.
*/
import java.util.*;
class CricketPlayer
{
  String name;
  int noi,not_out,t_run;
  float bat_avg;
  
  void accept()
  {
     Scanner sc=new Scanner(System.in);
    System.out.println("Enter Palyer name");
     name= sc.next();
    System.out.println("Enter no of innings");
     noi=sc.nextInt();
 System.out.println("Enter no of not out");
     not_out=sc.nextInt();
 System.out.println("Enter total run");
      t_run=sc.nextInt();
    bat_avg=avg(t_run,not_out,noi);
  }
  static float avg(int t_run,int not_out,int noi)
 {
   return t_run/(noi-not_out);
 }
  
  static void sort(CricketPlayer ob[],int n)
  {
   int pass;
      for(pass=1;pass<n;pass++)
      {
         for(int i=0;i<n-pass;i++)
         {
               if(ob[i].bat_avg<ob[i+1].bat_avg)
               {
                          CricketPlayer t=ob[i];
                          ob[i]=ob[i+1];
                          ob[i+1]=t;
               }
         }
      }
      for(int i=0;i<n;i++)
      {
            System.out.println("Name="+ob[i].name);
            System.out.println("Noi="+ob[i].noi);
            System.out.println("Not out="+ob[i].not_out);
            System.out.println("total run="+ob[i].t_run);
            System.out.println("avg="+ob[i].bat_avg);
        
      }
  }
 
  public static void main(String arg[])
  {
    CricketPlayer ob[]=new CricketPlayer[100];
    Scanner sc=new Scanner(System.in);
    System.out.println("Enter Limit");
    int n=sc.nextInt();
    for(int i=0;i<n;i++)
    {
         ob[i]=new CricketPlayer();
         ob[i].accept();
    }
    sort(ob,n);
  }
   
}



###########Slip-3###########################
/*Write a program to accept ‘n’ name of cities from the user and sort them in ascending
order*/
->>>>>>>>>>>
import java.util.*;
class city
{
 public static void main(String arg[])
 {
  String cname;
  Scanner sc=new Scanner(System.in);
   String a[]=new String[100];
   System.out.println("Enter Limit-");
   int n=sc.nextInt();
   System.out.println("Enter n city names-");
   for(int i=0;i<n;i++)
   {
       a[i]=sc.next();
   }
   
   for(int pass=1;pass<n;pass++)
   {
    for(int i=0;i<n-pass;i++)
    {
       if(a[i].compareTo(a[i+1])<0)  //##string1.compareTo(string2)<0
       {
          String t=a[i];
          a[i]=a[i+1];
          a[i+1]=t;
       }
    }
   }
   System.out.println("Cities in sorted order-");
   for(int i=0;i<n;i++)
   {
       System.out.println(""+a[i]);
   }
}
}
->>>>>>>>>>
/*Q2) Define a class patient (patient_name, patient_age, patient_oxy_level,patient_HRCT_report).
Create an object of patient. Handle appropriate exception while patient oxygen level less than
95% and HRCT scan report greater than 10, then throw user defined Exception “Patient is Covid
Positive(+) and Need to Hospitalized” otherwise display its information
*/
import java.util.*;
class CovidException extends Exception  //create udefined exception
{
   public String toString()
   {
        return"Patient is Covid Positive(+) and Need to Hospitalized";
   }
  }
  class Patient
  {
    String pname;
    int page,olevel,hrct;
   public static void main(String arg[])
   {
      try
      {
          Scanner sc=new Scanner(System.in);
         System.out.println("Enter Patient Name-");
          String pname=sc.next();
        System.out.println("Enter Patient Age-");
           int page=sc.nextInt();
         System.out.println("Enter Patient Oxygen Level in%-");
           int olevel=sc.nextInt();
        System.out.println("Enter Patient HRCT Scan Report-");
          int hrct=sc.nextInt();
          if(olevel<95&&hrct>10)
          {
                throw new CovidException();
          }
          System.out.println("Patient Name="+pname);
          System.out.println("Patient Age="+page);
          System.out.println("Patient Oxygen Level="+olevel);
          System.out.println("Patient HRCT Report="+hrct);
      }
      catch(Exception e)
      {
         System.out.println("Error="+e);
      }
   }
   Patient ob=new Patient();
}
####################slip-6######################
/*Q1) Write a program to display the Employee(Empid, Empname, Empdesignation, Empsal)
information using toString().
[10 marks]*/
->>>>>>>>>>>
=>toString() method gives output withou calling(public String toString())
import java.util.*;
class Emp
{
  int eid;
  String ename;
  String deg;
  float sal;
  void accept()
  {
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter Emp no-");
       eid=sc.nextInt();
      System.out.println("Enter Emp name-");
        ename=sc.next();
      System.out.println("Enter Emp Designation-");
       deg=sc.next();
      System.out.println("Enter Emp sal-");
       sal=sc.nextFloat();
  }
  public String toString()
  {
    return "\nEmp No="+eid+"\nEmp Name="+ename+"\nEmp Designation="+deg+"\nEmployee   Salary"+sal;
  }
  
}
class Demo
{
  public static void main(String arg[])
  {
    Emp ob=new Emp();
    ob.accept();
    System.out.println(ob);
  }
}

/*Q2) Create an abstract class “order” having members id, description. Create two subclasses
“Purchase Order” and “Sales Order” having members customer name and Vendor name
respectively. Define methods accept and display in all cases. Create 3 objects each of Purchase
Order and Sales Order and accept and display details.
*/
import java.util.*;
abstract class order
{
  int id;
  String desc;
  abstract void accept();
  abstract void display();
}
class Purchase_order extends order
{
   String cname;
  void accept()
  {
     Scanner sc=new Scanner(System.in);
     System.out.println("Enter Customer id");
     id=sc.nextInt();
     System.out.println("Enter Customer Desc");
     desc=sc.next();
     System.out.println("Enter Customer Name");
     cname=sc.next();  
  }
  void display()
  {
   System.out.println("Customer id="+id);
   System.out.println("Customer desc="+desc);
   System.out.println("Customer name="+cname);

  }
}
class Sales_order extends order
{
 String vname;
 void accept()
  {
     Scanner sc=new Scanner(System.in);
     System.out.println("Enter Vender id");
     id=sc.nextInt();
     System.out.println("Enter Vender Desc");
     desc=sc.next();
     System.out.println("Enter Venderer Name");
     vname=sc.next();  
  }
  void display()
  {
   System.out.println("Vender id="+id);
   System.out.println("Vender desc="+desc);
   System.out.println("Vender name="+vname);

  }
}
class Demo
{
 public static void main(String arg[])
 {
    Purchase_order ob1=new Purchase_order();
    Purchase_order ob2=new Purchase_order();
  Purchase_order ob3=new Purchase_order();
 Sales_order ob4=new Sales_order();
 Sales_order ob5=new Sales_order();
 Sales_order ob6=new Sales_order();
 
 ob1.accept();
  ob2.accept();
  ob3.accept();
 ob1.display();
  ob2.display();
  ob3.display();
 
  ob4.accept();
  ob5.accept();
  ob6.accept();
 ob4.display();
  ob5.display();
  ob6.display();

}
}
#############slip-8###########
//Q1) Create a class Sphere, to calculate the volume and surface area of sphere.
//(Hint : Surface area=4*3.14(r*r), Volume=(4/3)3.14(r*r*r))
import java.util.*;
class Sphere
{
   void Volume(int r)
   {
      double V=(4/3)*3.14*(r*r*r);
      System.out.println("\nVolume of Sphere="+V);
   }
   void Area(int r)
   {
      double A=(4*3.14*(r*r));
      System.out.println("\nSurface Area of Sphere="+A);
   }
}
class Demo
{
  public static void main(String arg[])
  {
    Sphere ob=new Sphere();
    Scanner sc=new Scanner(System.in);
    System.out.println("Enter Radius-");
    int r=sc.nextInt();
    ob.Volume(r);
    ob.Area(r);
  }
}

/*Q2) Design a screen to handle the Mouse Events such as MOUSE_MOVED
and MOUSE_CLICKED and display the position of the Mouse_Click in a TextField.
*/
/*Q2) Design a screen to handle the Mouse Events such as MOUSE_MOVED
and MOUSE_CLICKED and display the position of the Mouse_Click in a TextField.
*/
import java.awt.*;
import java.awt.event.*;
class Demo extends Frame implements MouseListener
{
  Label l1,l2;
  TextField t1,t2;
   Demo()
   {
      setVisible(true);
      setSize(500,500);
      setLayout(new FlowLayout());
      
      l1=new Label("Event");
      l2=new Label("Positon");
      t1=new TextField(20);
      t2=new TextField(10);
      add(l1); add(t1);
      add(l2); add(t2);
      addMouseListener(this);
   }
   public void mouseExited(MouseEvent me)
   {
      t1.setText("Mouse Exit Zala........");
   }
   public void mouseReleased(MouseEvent me)
   {
      t1.setText("Mouse Released Zala........");
   }
   public void mousePressed(MouseEvent me)
   {
      t1.setText("Mouse Pressed Zala........");
   }
   public void mouseEntered(MouseEvent me)
   {
      t1.setText("Mouse Entered Zala........");
   }
   public void mouseClicked(MouseEvent me)
   {
      t1.setText("Mouse Clicked Zala........");
   }
   
   public static void main(String arg[])
   {
    Demo ob=new Demo();
   }
}
#########slip-10#############
Q1) Write a program to find the cube of given number using functional interface.
[10 marks]

->>>>>>

//#METHODS IN IMPLEMENTED CLAS ARE PUBLIC COMPULSORY......
import java.util.*;
interface I1
{
   void cube(int n);
}
class Demo implements I1
{
  public  void cube(int n)
   {
       int C=n*n*n;
       System.out.println("\nCube of Number="+C);
   }
   public static void main(String arg[])
   {
      Demo ob=new Demo();
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter Number-");
      int n=sc.nextInt();
      ob.cube(n);
   }
}
Q2) Write a program to create a package name student. Define class StudentInfo with method to
display information about student such as rollno, class, and percentage. Create another class
StudentPer with method to find percentage of the student. Accept student details like
rollno, name, class and marks of 6 subject from user
#######slip-11###################

->>>>
/*Q1) Define an interface “Operation” which has method volume( ).
       Define a constant PI having a value 3.142 
       Create a class cylinder which implements this interface (members – radius, height). 
       Create one object and calculate the volume.
       #Volume of Cylinder=3.14*r*r*h (not given)
[10 marks]*/
import java.util.*;
interface Operation
{
  final float PI=3.142f;
  void volume(float r,float h);
}
class Cylinder implements Operation
{
 /*######VVVimp->implemeted class chi defination public asate... #otherwie error->error: volume(float,float) in Cylinder cannot implement volume(float,float) in Operation
   void volume(float r,float h)
        ^
  attempting to assign weaker access privileges; was public*/
  public  void volume(float r,float h)
   {
      float  V=PI*r*r*h;
       System.out.println("\nVolume of Cylinder-"+V);
   }
   public static void main(String arg[])
   {
      Cylinder ob=new Cylinder();
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter Radius-");
      float r=sc.nextFloat();
     System.out.println("Enter height-");
      float h=sc.nextFloat();
      ob.volume(r,h);
   }
}
####################OR###############

import java.util.*;
interface Operation
{
  final float PI=3.142f;
  void volume();
}
class Cylinder implements Operation
{
  public  void volume()
   {
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter Radius-");
     float r=sc.nextFloat();
     System.out.println("Enter height-");
       float h=sc.nextFloat();
  
      float  V=PI*r*r*h;
       System.out.println("\nVolume of Cylinder-"+V);
   }
   public static void main(String arg[])
   {
      Cylinder ob=new Cylinder();
      ob.volume();
   }
}

/*Q2) Write a program to accept the username and password from user if username and password are
not same then raise "Invalid Password" with appropriate msg
*/
import java.util.*;
class CheckException extends Exception
{
  public String  toString()
  {
     return"Invalid Password............";
  }
}
class Demo
{
   public static void main(String arg[])
   {
    try
    {
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter Username-");
      String username=sc.next();
     System.out.println("Enter Password-");
      String password=sc.next();
      if(!(username.compareTo(password)==0))
      {
           throw new CheckException();
      }
      System.out.println("Login Successfully Your password is valid.......");
   }
   catch(Exception e)
   {
      System.out.println("Error="+e);
   }
   }
}#######slip-12########
//Q1) Write a program to create parent class College(cno, cname, caddr) and derived class
//Department(dno, dname) from College. Write a necessary methods to display College details.
//[10 marks]
import java.util.*;
class College
{
  int cno;
  String  cname;
  String caddr;
  void acceptc()
  {
     Scanner sc=new Scanner(System.in);
    System.out.println("Enter College No- ");
    cno=sc.nextInt();
    System.out.println("Enter College Name- ");
    cname=sc.next();
    System.out.println("Enter College Address- ");
    caddr=sc.next();
  }
}
class Department extends College
{
  int dno;
  String dname;
  void acceptd()
  {
       Scanner sc=new Scanner(System.in);
    System.out.println("Enter Dept No- ");
    dno=sc.nextInt();
    System.out.println("Enter Dept Name- ");
    dname=sc.next();
   }
   void display()
   {
      Scanner sc=new Scanner(System.in);
       System.out.println("College No-"+cno);
       System.out.println("College Name-"+cname);
       System.out.println("College Addr-"+caddr);
        System.out.println("Dept No-"+dno);
       System.out.println("Dept Name-"+dname);
  
   }
}
class Demo
{
  public static void main(String arg[])
  {
     Department ob=new Department();
     ob.acceptc();
     ob.acceptd();
     ob.display();
  }
}
Q2) Write a java program that works as a simple calculator. Use a grid layout to arrange buttons for
the digits and for the +, -, *, % operations. Add a text field to display the result.
#############slip-14################
/*Q1) Write a program to accept a number from the user, if number is zero then throw user defined
exception “Number is 0” otherwise check whether no is prime or not (Use static keyword).
[10 marks]
*/
import java.util.*;
class NumberisZeroException extends Exception
{
    public String toString()
    {
      return "Number is Zero.........";
    }
}
class CheckDemo
{
 public static void main(String arg[])
 {
 try
 {
   Scanner sc=new Scanner(System.in);
   System.out.println("Enter number-");
   int n=sc.nextInt();
   if(n==0)
   {
      throw new NumberisZeroException();
   }
    int i;
    for( i=2;i<=n;i++)
    {
        if(n%i==0)
        break;
    }
    if(i==n)
    System.out.println("Number is Prime");
    else
    System.out.println("Number is not prime..");
 }
 catch(Exception e)
 {
   System.out.println("Error-"+e);
 }
}
}
Q2) Write a Java program to create a Package “SY” which has a class SYMarks (members –
ComputerTotal, MathsTotal, and ElectronicsTotal). Create another package TY which has a
class TYMarks (members – Theory, Practicals). Create ‘n’ objects of Student class (having
rollNumber, name, SYMarks and TYMarks). Add the marks of SY and TY computer subjects
and calculate the Grade (‘A’ for >= 70, ‘B’ for >= 60 ‘C’ for >= 50, Pass Class for > =40
else‘FAIL’) and display the result of the student in proper format.
#############slip-16#######################
Q1) Write a program to find the Square of given number using function interface.
[10 marks]
->>>>
import java.util.*;
interface I1
{ 
  void square(int n);
}
class Demo implements I1
{
  public void square(int n)
  {
     int S=n*n;
     System.out.println("\nSquare of Number="+S);
  }
  public static void main(String arg[])
  {
     Demo ob=new Demo();
     Scanner sc=new Scanner(System.in);
     System.out.println("Enter Number-");
      int n=sc.nextInt();
     ob.square(n);
  }
}
Q2) Write a program to design a screen using Awt that,
#############slip-18#################
Q1) Write a program to implement Border Layout Manager.
[10 marks]
Q2) Define a class CricketPlayer (name,no_of_innings,no_of_times_notout, totatruns, bat_avg).
Create an array of n player objects. Calculate the batting average for each player using static
method avg(). Define a static sort method which sorts the array on the basis of average.
Display the player details in sorted order.
#########slip-19###################

/*Q1) Write a program to accept the two dimensional array from user and display sum of its diagonal
elements.
[10 marks]
*/
import java.util.*;
class Demo
{
 public static void main(String arg[])
 {
 int s=0;
   int a[][]=new int[100][100];
   Scanner sc=new Scanner(System.in);
   System.out.println("Enter Number of rows and columns-");
   int m=sc.nextInt();
   int n=sc.nextInt();
   System.out.println("Enter Matrix");
   for(int i=1;i<=m;i++)
   {
    for(int j=1;j<=n;j++)
    {
      a[i][j]=sc.nextInt();
      if(i==j)
      {
           s=s+a[i][j];
      }
       }
     }

        System.out.println("Sum of Diagonals="+s);
 }
}
Q2) Write a program which shows the combo box which includes list of T.Y.B.Sc.(Comp. Sci)
subjects. Display the selected subject in a text field.
####################slip-20#################
/*Q1) Write a Program to illustrate multilevel Inheritance such that country is inherited from
continent. State is inherited from country. Display the place, state, country and continent.
[10 marks]
*/
import java.util.*;
class Continent
{
  Scanner sc=new Scanner(System.in);
   String cname;
   void acceptc()
   {
       System.out.println("Enter Continenet Name-");
       cname=sc.next();
   }
}
class Country extends Continent
{
  Scanner sc=new Scanner(System.in);
   String coname;
   void acceptco()
   {
       System.out.println("Enter Country Name-");
       coname=sc.next();
   }
}
class State extends Country
{
  Scanner sc=new Scanner(System.in);
   String sname,pname;
   void accepts()
   {
       System.out.println("Enter State Name-");
       sname=sc.next();
       System.out.println("Enter Place Name-");
       pname=sc.next();
   }
   void display()
   {
      System.out.println("Continent Name-"+cname);
      System.out.println("Country Name-"+coname);
      System.out.println("State Name-"+sname);
      System.out.println("Place Name-"+pname);
   }
}
class Demo
{
 public static void main(String arg[])
 { 
    State ob=new State();
    ob.acceptc();
    ob.acceptco();
    ob.accepts();
    ob.display();
 }
}Q2) Write a package for Operation, which has two classes, Addition and Maximum. Addition has
two methods add () and subtract (), which are used to add two integers and subtract two,
float values respectively. Maximum has a method max () to display the maximum of two
integers

############slip-21##############################
Q1) Define a class MyDate(Day, Month, year) with methods to accept and display a MyDateobject.
Accept date as dd,mm,yyyy. Throw user defined exception "InvalidDateException" if the date
is invalid.
[10 marks]
Q2) Create an employee class(id,name,deptname,salary). Define a default and parameterized
constructor. Use ‘this’ keyword to initialize instance variables. Keep a count of objects
created. Create objects using parameterized constructor and display the object count after
each object is created. (Use static member and method). Also display the contents of each
object.

################slip-29#################
Q1) Write a program to create a class Customer(custno,custname,contactnumber,custaddr).
Write a method to search the customer name with given contact number and display the
details.
[10 marks]
Q2) Write a program to create a super class Vehicle having members Company and price.
Derive two different classes LightMotorVehicle(mileage) and HeavyMotorVehicle
(capacity_in_tons). Accept the information for "n" vehicles and display the information in
appropriate form. While taking data, ask user about the type of vehicle first.

############slip-30#####################
Q1) Write program to define class Person with data member as Personname,Aadharno, Panno.
Accept information for 5 objects and display appropriate information (use this keyword).
[10 marks]
->>>>>>>>>>>
/*Q1) Write program to define class Person with data member as Personname,Aadharno, Panno.
Accept information for 5 objects and display appropriate information (use this keyword).
[10 marks]
*/
import java.util.*;
class Person
{
  String pname;
   String adhar;
   String pan;
   void accept(String pname,String adhar,String pan)
   {
     this.pname=pname;
     this.adhar=adhar;
     this.pan=pan;
   }
   void display()
   {
      System.out.println("Person Name="+pname);
      System.out.println("Person Adhar No="+adhar);
      System.out.println("Person Pan no="+pan);
   }
    public static void main(String arg[])
    {
        Person ob[]=new Person[100]; //create aoo
      Scanner sc=new Scanner(System.in);
     System.out.println("Enter Limit-");
       int n=sc.nextInt();
       for(int i=0;i<n;i++)
      {
        ob[i]=new Person(); //memory allocate
       System.out.println("Enter Person Name");
       String  pname=sc.next();
       System.out.println("Enter Person Adhar No");
         String adhar=sc.next();
        System.out.println("Enter Person Pan");
         String pan=sc.next();
    
         ob[i].accept(pname,adhar,pan);  //call function
          }
            for(int i=0;i<n;i++)
            {
              ob[i].display();
         }
    }
}
/*Q2) Write a program that creates a user interface to perform integer divisions. The user enters two numbers in the text fields, Number1 and Number2. The division of Number1 and Number2 is
displayed in the Result field when the Divide button is clicked. If Number1 or Number2 were
not an integer, the program would throw a NumberFormatException. If Number2 were Zero,
the program would throw an Arithmetic Exception Display the exception in a message
dialog box.
{i.e we have to use GUI Programming......}
*/


import java.lang.Integer;
import java.awt.*;
import java.awt.event.*;  //import package
import javax.swing.*;
class Demo extends Frame implements ActionListener  //implement listener
{
  Label l1,l2,l3;
  TextField t1,t2,t3;
  Button b1;
  Demo()  //default constructtor.....
  {
      setVisible(true);
      setSize(500,500);
      setLayout(new FlowLayout());
  //setBackground(Color.pink);
  
    l1=new Label("Enter No-1");
    l2=new Label("Enter No-2");
    l3=new Label("Result");
    t1=new TextField(10);
     t2=new TextField(10);
      t3=new TextField(10);
      b1=new Button("Divide");
      add(l1); add(t1);
      add(l2);add(t2);
      add(l3);add(t3);
      add(b1);
      b1.addActionListener(this);         //add refference........
 }
 
  public void actionPerformed(ActionEvent ae)  //ovverride method......
  {
    try
    {
     if(ae.getSource()==b1)  //handle event.....
     {
        String s1=t1.getText();
        String s2=t2.getText();
        int a=Integer.parseInt(s1);
        int b=Integer.parseInt(s2);
        int c=a/b;
        t3.setText(""+c);
      }
     }
     catch(Exception e)
     {
         JOptionPane.showMessageDialog(this,e);
     }
  }

  public static void main(String arg[])
  {
      Demo ob=new Demo();
  }
}



